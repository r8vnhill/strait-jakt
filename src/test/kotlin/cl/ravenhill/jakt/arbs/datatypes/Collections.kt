package cl.ravenhill.jakt.arbs.datatypes

import io.kotest.property.Arb
import io.kotest.property.arbitrary.choice
import io.kotest.property.arbitrary.list
import io.kotest.property.arbitrary.set

/**
 * Provides an arbitrary generator for producing collections of primitive types.
 *
 * This function is an extension to the `Arb.Companion` and creates a generator capable of producing
 * either lists or sets containing primitive types. The types included in the collections are those
 * generated by the [anyPrimitive] function, ensuring that the collections consist of fundamental
 * Kotlin data types.
 *
 * ## Examples
 * ### Example 1: Using in property-based tests
 * ```kotlin
 * checkAll(Arb.collection()) { collection ->
 *     // Some test logic with the generated collection
 * }
 * ```
 *
 * @return An [Arb] that generates either a [List] or a [Set] containing primitive types.
 */
fun Arb.Companion.collection() = choice(
    list(Arb.anyPrimitive()),
    set(Arb.anyPrimitive())
)
